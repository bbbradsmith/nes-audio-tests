#
# swap_nsf.cfg
#   linker configuration for swap tests NSF ROM
#   https://github.com/bbbradsmith/nes-audio-tests
#

SYMBOLS
{
	INES_MAPPER:   type = weak, addrsize = abs, value = 0;
	INES2_REGION:  type = weak, addrsize =  zp, value = 2; # 2 = Dual
	SKIP_HOTSWAP:  type = weak, addrsize =  zp, value = 1;
	NSF_EXPANSION: type = weak, addrsize =  zp, value = 0;
}

MEMORY
{
	RAM_ZP:     start = $0000, size =   $100, type = rw, file = "";
	RAM_STACK:  start = $0100, size =   $100, type = rw, file = "";
	RAM_MAIN:   start = $0200, size =   $600, type = rw, file = "";

	HEADER:     start = $0000, size =    $80, type = ro, file = %O, fill = yes, fillval = 0;
	ROM_BANK:   start = $E000, size =  $2000, type = ro, file = %O, fill = no, define = yes;
	SUFFIX:     start = $0000, size =  $1000, type = ro, file = %O, fill = no;

	DUMMY:      start = $0000, size = $10000, type = ro, file = "";
}

SEGMENTS
{
	NSF_HEADER0: load =    HEADER, type =  ro, optional =  no;
	NSF_HEADER1: load =    HEADER, type =  ro, optional =  no;
	NSF_HEADER2: load =    HEADER, type =  ro, optional =  no;
	SWAP:        load =  ROM_BANK, type =  ro, optional = yes, define = yes, run = RAM_MAIN, align = 256;
	SHARED:      load =  ROM_BANK, type =  ro, optional = yes, align = 256;
	NSF:         load =  ROM_BANK, type =  ro, optional = yes;
	NSFE_SUFFIX: load =    SUFFIX, type =  ro, optional =  no, define = yes;

	ZEROPAGE:    load =    RAM_ZP, type =  zp, optional = yes;
	STACK:       load = RAM_STACK, type = bss, optional = yes;
	RAM:         load =  RAM_MAIN, type = bss, optional = yes;

	NES_HEADER:  load =     DUMMY, type =  ro, optional = yes;
	NES:         load =     DUMMY, type =  ro, optional = yes;
	VECTORS:     load =     DUMMY, type =  ro, optional = yes, start = $FFFA;
}
